@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: #ffffff;
  --foreground: #171717;

  /* Night House Photo Color System - PRIMARY PALETTE */
  --night-indigo: #1a2845;
  --night-dark: #0d1424;
  --house-gold: #ffdc96;
  --gold-bright: #f5c266;
  --brick-red: #8b4a3a;
  --brick-warm: #a85845;
  --house-trim: #e8dcc8;

  /* Overlay & Texture Tokens */
  --frost-overlay: rgba(255, 255, 255, 0.06);
  --bokeh-white: rgba(255, 255, 255, 0.65);
}

/* Custom animations */
@keyframes glow {
  0%, 100% { opacity: 1; }
  50% { opacity: 0.5; }
}

@keyframes lightPulse {
  0%, 100% { opacity: 0.7; }
  50% { opacity: 1; }
}

@keyframes slideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fadeIn {
  from { opacity: 0; }
  to { opacity: 1; }
}

/* Utility classes for animations */
.animate-glow {
  animation: glow 2s ease-in-out infinite;
}

.animate-slide-up {
  animation: slideUp 0.5s ease-out forwards;
}

.animate-fade-in {
  animation: fadeIn 0.5s ease-out forwards;
}

/* Smooth scrolling */
html {
  scroll-behavior: smooth;
}

body {
  color: var(--foreground);
  background: var(--background);
  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
}

/* Neon glow effect */
.neon-glow {
  box-shadow: 0 0 20px rgba(96, 165, 250, 0.5);
}

.neon-text {
  text-shadow: 0 0 10px rgba(96, 165, 250, 0.5);
}

/* Warm Light Glow Animation (Pulser Effect) for ALL Buttons and Links */
@keyframes warmLightPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0.7);
  }
  70% {
    transform: scale(1.05);
    box-shadow: 0 0 0 15px rgba(255, 193, 7, 0);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 0 0 0 rgba(255, 193, 7, 0);
  }
}

/* Apply gold glow to all interactive elements */
button:not(.no-glow),
a[href]:not(.no-glow),
input[type="submit"]:not(.no-glow),
input[type="button"]:not(.no-glow),
.button:not(.no-glow),
.btn:not(.no-glow),
[role="button"]:not(.no-glow) {
  position: relative;
  transition: all 250ms ease;
}

button:not(.no-glow):hover,
button:not(.no-glow):focus,
a[href]:not(.no-glow):hover,
a[href]:not(.no-glow):focus,
input[type="submit"]:not(.no-glow):hover,
input[type="submit"]:not(.no-glow):focus,
input[type="button"]:not(.no-glow):hover,
input[type="button"]:not(.no-glow):focus,
.button:not(.no-glow):hover,
.button:not(.no-glow):focus,
.btn:not(.no-glow):hover,
.btn:not(.no-glow):focus,
[role="button"]:not(.no-glow):hover,
[role="button"]:not(.no-glow):focus {
  animation: warmLightPulse 1.5s ease-in-out infinite;
  z-index: 10;
}

/* Hero curve responsive visibility */
.hero-curve-desktop {
  display: block;
}

.hero-curve-tablet,
.hero-curve-mobile {
  display: none;
}

@media (max-width: 1024px) {
  .hero-curve-desktop {
    display: none;
  }
  .hero-curve-tablet {
    display: block;
  }
}

@media (max-width: 640px) {
  .hero-curve-tablet {
    display: none;
  }
  .hero-curve-mobile {
    display: block;
  }
}

/* Glowing Card Effect */
.glowing-card {
  --glow-sens: 30;
  --color-sens: calc(var(--glow-sens) + 20);
  --pointer-deg: 45deg;
  --pointer-d: 0;

  position: relative;
  isolation: isolate;
  transform: translate3d(0, 0, 0.01px);
}

/* Mobile: Show constant subtle glow on all edges */
@media (hover: none) and (pointer: coarse) {
  .glowing-card::before,
  .glowing-card::after,
  .glowing-card > .glow-effect {
    opacity: 0.3 !important;
    transition: none !important;
  }

  .glowing-card > .glow-effect {
    mask-image: none !important;
    animation: pulseGlow 3s ease-in-out infinite;
  }

  .glowing-card::before {
    mask-image: none !important;
  }
}

@keyframes pulseGlow {
  0%, 100% {
    opacity: 0.2;
  }
  50% {
    opacity: 0.4;
  }
}

.glowing-card::before,
.glowing-card::after,
.glowing-card > .glow-effect {
  content: "";
  position: absolute;
  inset: 0;
  border-radius: inherit;
  transition: opacity 0.25s ease-out;
  z-index: -1;
  pointer-events: none;
}

.glowing-card:not(:hover)::before,
.glowing-card:not(:hover)::after,
.glowing-card:not(:hover) > .glow-effect {
  opacity: 0;
  transition: opacity 0.75s ease-in-out;
}

/* Colored mesh gradient border */
.glowing-card::before {
  border: 1px solid transparent;
  background:
    linear-gradient(rgba(255, 255, 255, 0.75) 0 100%) padding-box,
    linear-gradient(rgb(255 255 255 / 0%) 0% 100%) border-box,
    radial-gradient(at 80% 55%, hsla(180,60%,65%,1) 0px, transparent 50%) border-box,
    radial-gradient(at 69% 34%, hsla(25,80%,65%,1) 0px, transparent 50%) border-box,
    radial-gradient(at 8% 6%, hsla(174,70%,70%,1) 0px, transparent 50%) border-box,
    radial-gradient(at 41% 38%, hsla(180,60%,60%,1) 0px, transparent 50%) border-box,
    radial-gradient(at 86% 85%, hsla(174,70%,68%,1) 0px, transparent 50%) border-box,
    radial-gradient(at 82% 18%, hsla(40,85%,60%,1) 0px, transparent 50%) border-box,
    radial-gradient(at 51% 4%, hsla(25,80%,65%,1) 0px, transparent 50%) border-box,
    linear-gradient(#2F7E80 0 100%) border-box;

  opacity: calc((var(--pointer-d) - var(--color-sens)) / (100 - var(--color-sens)));
  mask-image: conic-gradient(
    from var(--pointer-deg) at center,
    black 25%, transparent 40%, transparent 60%, black 75%
  );
}

/* Colored mesh gradient background */
.glowing-card::after {
  border: 1px solid transparent;
  background:
    radial-gradient(at 80% 55%, hsla(180,60%,65%,1) 0px, transparent 50%) padding-box,
    radial-gradient(at 69% 34%, hsla(25,80%,65%,1) 0px, transparent 50%) padding-box,
    radial-gradient(at 8% 6%, hsla(174,70%,70%,1) 0px, transparent 50%) padding-box,
    radial-gradient(at 41% 38%, hsla(180,60%,60%,1) 0px, transparent 50%) padding-box,
    radial-gradient(at 86% 85%, hsla(174,70%,68%,1) 0px, transparent 50%) padding-box,
    radial-gradient(at 82% 18%, hsla(40,85%,60%,1) 0px, transparent 50%) padding-box,
    radial-gradient(at 51% 4%, hsla(25,80%,65%,1) 0px, transparent 50%) padding-box,
    linear-gradient(#2F7E80 0 100%) padding-box;

  mask-image:
    linear-gradient( to bottom, black, black ),
    radial-gradient( ellipse at 50% 50%, black 40%, transparent 65% ),
    radial-gradient( ellipse at 66% 66%, black 5%, transparent 40% ),
    radial-gradient( ellipse at 33% 33%, black 5%, transparent 40% ),
    radial-gradient( ellipse at 66% 33%, black 5%, transparent 40% ),
    radial-gradient( ellipse at 33% 66%, black 5%, transparent 40% ),
    conic-gradient( from var(--pointer-deg) at center, transparent 5%, black 15%, black 85%, transparent 95% );
  mask-composite: subtract, add, add, add, add, add;

  opacity: calc((var(--pointer-d) - var(--color-sens)) / (100 - var(--color-sens)));
  mix-blend-mode: soft-light;
}

/* Glowing border edges */
.glowing-card > .glow-effect {
  inset: -20px;
  z-index: 1;
  mask-image: conic-gradient(
    from var(--pointer-deg) at center,
    black 2.5%, transparent 10%, transparent 90%, black 97.5%
  );
  opacity: calc((var(--pointer-d) - var(--glow-sens)) / (100 - var(--glow-sens)));
  mix-blend-mode: plus-lighter;
}

.glowing-card > .glow-effect::before {
  content: "";
  position: absolute;
  inset: 20px;
  border-radius: inherit;
  box-shadow:
    inset 0 0 0 1px hsl(180 70% 75% / 100%),
    inset 0 0 1px 0 hsl(180 70% 75% / 80%),
    inset 0 0 3px 0 hsl(180 70% 75% / 70%),
    inset 0 0 6px 0 hsl(180 70% 75% / 60%),
    inset 0 0 15px 0 hsl(180 70% 75% / 50%),
    inset 0 0 25px 2px hsl(180 70% 75% / 40%),
    inset 0 0 50px 2px hsl(180 70% 75% / 30%),
    0 0 1px 0 hsl(180 70% 75% / 80%),
    0 0 3px 0 hsl(180 70% 75% / 70%),
    0 0 6px 0 hsl(180 70% 75% / 60%),
    0 0 15px 0 hsl(180 70% 75% / 50%),
    0 0 25px 2px hsl(180 70% 75% / 40%),
    0 0 50px 2px hsl(180 70% 75% / 30%);
}

.glowing-card > .card-inner {
  position: relative;
  z-index: 1;
}